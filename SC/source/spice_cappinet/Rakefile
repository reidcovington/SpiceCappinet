require 'rake'
require 'rspec/core/rake_task'

require_relative 'config/application'

# put these in your Rakefile
# some related reading: http://itshouldbeuseful.wordpress.com/2011/11/07/passing-parameters-to-a-rake-task/

namespace 'new' do

  desc 'create new model'
  task 'model' do
    contents = <<-RUBY.gsub(/^ {6}/, '')
      require_relative '../config/application'

      class #{ARGV.last.capitalize} < ActiveRecord::Base
      # implement your #{ARGV.last.capitalize} model here
      end
    RUBY

    filename = "app/models/#{ARGV.last}.rb"
    `touch #{filename}`

    File.write(filename, contents)
    task ARGV.last.to_sym do ; end  # suppress errors when rake tries to interpret this madness
  end

  desc 'create new migration'
  task 'migration' do
    contents = <<-RUBY.gsub(/^ {6}/, '')
      require_relative 'config/application'

      # this is where you should use an ActiveRecord migration to

      class #{ARGV.last.split('_').map(&:capitalize).join} < ActiveRecord::Migration
        def change
          # HINT: checkout ActiveRecord::Migration.create_table
        end
      end
    RUBY

    filename = "db/migrate/#{Time.now.strftime('%Y%m%d%H%M%S')}_#{ARGV.last}.rb"
    `touch #{filename}`

    File.write(filename, contents)
    task ARGV.last.to_sym do ; end  # suppress errors when rake tries to interpret this madness
  end
end

desc "create the database"
task "db:create" do
  puts "Creating file #{DB_PATH} if it doesn't exist..."
  touch DB_PATH
end

desc "drop the database"
task "db:drop" do
  puts "Deleting #{DB_PATH}..."
  rm_f DB_PATH
end

desc "migrate the database (options: VERSION=x, VERBOSE=false, SCOPE=blog)."
task "db:migrate" do
  ActiveRecord::Migrator.migrations_paths << File.dirname(__FILE__) + 'db/migrate'
  ActiveRecord::Migration.verbose = ENV["VERBOSE"] ? ENV["VERBOSE"] == "true" : true
  ActiveRecord::Migrator.migrate(ActiveRecord::Migrator.migrations_paths, ENV["VERSION"] ? ENV["VERSION"].to_i : nil) do |migration|
    ENV["SCOPE"].blank? || (ENV["SCOPE"] == migration.scope)
  end
end

desc "populate the test database with sample data"
task "db:seed" do
  require APP_ROOT.join('db', 'seeds.rb')
end

desc 'Retrieves the current schema version number'
task "db:version" do
  puts "Current version: #{ActiveRecord::Migrator.current_version}"
end

desc 'Start IRB with application environment loaded'
task "console" do
  exec "irb -r./config/application"
end

desc "Run the specs"
RSpec::Core::RakeTask.new(:spec)

task :default  => :specs
